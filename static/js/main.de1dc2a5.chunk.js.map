{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","alphabet","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,iBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAAkCC,mBAAwB,IAA1D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA/BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,UAAWE,EACb,EADaA,UAEPI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAASc,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAE9B,QACE,OAAO,MAKXV,GACFI,EAAcO,UAGTP,EAMcQ,CACnBjB,EAAiB,CAAEG,YAAWE,cAGhC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASc,WACrCK,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcJ,EAASc,WAJvC,iCAUA,wBACEM,KAAK,SACLC,QAAS,kBAAMhB,EAAaL,EAASgB,SACrCG,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAcJ,EAASgB,SAJvC,4BAUA,wBACEI,KAAK,SACLC,QAAS,kBAAMd,GAAcD,IAC7Ba,UAAWG,IAAG,oBAAqB,CACjC,YAAahB,IAJjB,sBAUEA,GAAaF,IACb,wBACEgB,KAAK,SACLC,QAAS,WACPhB,EAAa,IACbE,GAAa,IAEfY,UAAU,4BANZ,sBAaJ,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC9GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.de1dc2a5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n}\n\ninterface SortParams {\n  sortField: SortType | '',\n  isReverse: boolean\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, isReverse }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n\n        case SortType.length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<SortType | ''>('');\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, { sortField, isReverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.alphabet)}\n          className={cn('button is-info', {\n            'is-light': sortField !== SortType.alphabet,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setSortField(SortType.length)}\n          className={cn('button is-success', {\n            'is-light': sortField !== SortType.length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => setIsReverse(!isReverse)}\n          className={cn('button is-warning', {\n            'is-light': !isReverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(isReverse || sortField) && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortField('');\n              setIsReverse(false);\n            }}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}